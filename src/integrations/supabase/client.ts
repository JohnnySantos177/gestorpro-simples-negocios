
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jxzbartwbukfbqtylvtk.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp4emJhcnR3YnVrZmJxdHlsdnRrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY5OTY0MzEsImV4cCI6MjA2MjU3MjQzMX0.FBwOUvJHQ7o25jrpPdXq9qtR0W_FGmvXwF6fwbQMHrU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to get data with proper typing
export async function getFromTable<T>(table: string, userId: string) {
  const { data, error } = await supabase
    .from(table)
    .select('*')
    .eq('user_id', userId);
  
  if (error) {
    console.error(`Error fetching from ${table}:`, error);
    throw error;
  }
  
  return data as T[];
}

// Helper function to insert data with proper typing
export async function insertIntoTable<T>(table: string, data: Omit<T, 'id'>) {
  const { data: insertedData, error } = await supabase
    .from(table)
    .insert(data)
    .select()
    .single();
  
  if (error) {
    console.error(`Error inserting into ${table}:`, error);
    throw error;
  }
  
  return insertedData as T;
}

// Helper function to update data with proper typing
export async function updateInTable<T>(table: string, id: string, data: Partial<T>) {
  const { data: updatedData, error } = await supabase
    .from(table)
    .update(data)
    .eq('id', id)
    .select()
    .single();
  
  if (error) {
    console.error(`Error updating in ${table}:`, error);
    throw error;
  }
  
  return updatedData as T;
}

// Helper function to delete data
export async function deleteFromTable(table: string, id: string) {
  const { error } = await supabase
    .from(table)
    .delete()
    .eq('id', id);
  
  if (error) {
    console.error(`Error deleting from ${table}:`, error);
    throw error;
  }
  
  return true;
}
